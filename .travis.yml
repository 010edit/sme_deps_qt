version: ~> 1.0
os: linux
dist: xenial
language: cpp
cache:
  directories:
    - qt
env:
  global:
    - QT5_VERSION="v5.15.1"
    - MSYS_URL='https://github.com/msys2/msys2-installer/releases/download/2020-09-03/msys2-base-x86_64-20200903.sfx.exe'

jobs:
  include:
    - name: "linux"
      os: linux
      dist: xenial
      compiler: gcc
      env:
        - INSTALL_PREFIX="/opt/smelibs"
        - BUILD_SHELL='bash'
        - SUDO_CMD='sudo'
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            # qt5.15 removed -qt-xcb configure option
            # has -bundled-xcb-xinput instead, but still depends on more system libraries now
            # https://codereview.qt-project.org/c/qt/qtdoc/+/300877/3/doc/src/platforms/linux.qdoc#294
            - libfontconfig1-dev
            - libfreetype6-dev
            - libx11-dev
            - libx11-xcb-dev
            - libxext-dev
            - libxfixes-dev
            - libxi-dev
            - libxrender-dev
            - libxcb1-dev
            - libxcb-glx0-dev
            - libxcb-keysyms1-dev
            - libxcb-image0-dev
            - libxcb-shm0-dev
            - libxcb-icccm4-dev
            - libxcb-sync-dev
            - libxcb-xfixes0-dev
            - libxcb-shape0-dev
            - libxcb-randr0-dev
            - libxcb-render-util0-dev
            - libxkbcommon-dev
            - libxkbcommon-x11-dev
            # this is not listed in Qt docs but seems necessary:
            - libxcb-xinerama0-dev
      before_install:
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100
        - gcc --version
        - g++ --version
      before_script:
        - echo "INSTALL_PREFIX=$INSTALL_PREFIX" > source.sh
        - echo "SUDO_CMD=$SUDO_CMD" >> source.sh
        - echo 'CONFIGURE_EXTRAS="-xcb"' >> source.sh
        - echo "QT5_VERSION=$QT5_VERSION" >> source.sh
        - cat source.sh
    - name: "osx"
      os: osx
      osx_image: xcode11.3
      compiler: clang
      env:
        - INSTALL_PREFIX="/opt/smelibs"
        - BUILD_SHELL='bash'
        - SUDO_CMD='sudo'
        - MACOSX_DEPLOYMENT_TARGET=10.14
      before_script:
        - echo "INSTALL_PREFIX=$INSTALL_PREFIX" > source.sh
        - echo "SUDO_CMD=$SUDO_CMD" >> source.sh
        - echo 'CONFIGURE_EXTRAS="-bundled-xcb-xinput"' >> source.sh
        - echo "QT5_VERSION=$QT5_VERSION" >> source.sh
        - cat source.sh
    - name: "win64"
      os: windows
      env:
        - INSTALL_PREFIX="/c/smelibs"
        - SUDO_CMD=''
        # this environment variable is here to ensure the two windows builds don't share the same cache
        # see https://docs.travis-ci.com/user/caching#caches-and-build-matrices
        - ARCH='x86_64'
      install:
        # https://www.msys2.org/docs/ci/
        - wget $MSYS_URL -O msys2.exe
        - ./msys2.exe -y -oC:\\
        - export MSYS_SHELL='cmd //C RefreshEnv.cmd & set MSYS=winsymlinks:nativestrict & C:\\msys64\\msys2_shell.cmd -defterm -no-start -here -msys -lc'
        - $MSYS_SHELL ' '
        - $MSYS_SHELL 'pacman --noconfirm -Syuu'
        - $MSYS_SHELL 'pacman --noconfirm -Syuu'
        - $MSYS_SHELL "pacman --noconfirm -Syuu mingw-w64-x86_64-gcc git make"
        - export BUILD_SHELL='cmd //C RefreshEnv.cmd & set MSYS=winsymlinks:nativestrict & C:\\msys64\\msys2_shell.cmd -defterm -no-start -here -mingw64 -l'
        - taskkill //IM gpg-agent.exe //F || echo "task not found" # https://travis-ci.community/t/4967
        - taskkill //IM dirmngr.exe //F || echo "task not found" # similar to above
      before_script:
        - echo "INSTALL_PREFIX=$INSTALL_PREFIX" > source.sh
        - echo 'SUDO_CMD=""' >> source.sh
        - echo 'CONFIGURE_EXTRAS="-platform win32-g++ -static-runtime -no-zstd"' >> source.sh
        - echo "QT5_VERSION=$QT5_VERSION" >> source.sh
        - cat source.sh
    - name: "win32"
      os: windows
      env:
        - INSTALL_PREFIX="/c/smelibs"
        - SUDO_CMD=''
        - ARCH='i686'
      install:
        # https://www.msys2.org/docs/ci/
        - wget $MSYS_URL -O msys2.exe
        - ./msys2.exe -y -oC:\\
        - export MSYS_SHELL='cmd //C RefreshEnv.cmd & set MSYS=winsymlinks:nativestrict & C:\\msys64\\msys2_shell.cmd -defterm -no-start -here -msys -lc'
        - $MSYS_SHELL ' '
        - $MSYS_SHELL 'pacman --noconfirm -Syuu'
        - $MSYS_SHELL 'pacman --noconfirm -Syuu'
        - $MSYS_SHELL "pacman --noconfirm -Syuu mingw-w64-i686-gcc git make"
        - export BUILD_SHELL='cmd //C RefreshEnv.cmd & set MSYS=winsymlinks:nativestrict & C:\\msys64\\msys2_shell.cmd -defterm -no-start -here -mingw32 -l'
        - taskkill //IM gpg-agent.exe //F || echo "task not found" # https://travis-ci.community/t/4967
        - taskkill //IM dirmngr.exe //F || echo "task not found" # similar to above
      before_script:
        - echo "INSTALL_PREFIX=$INSTALL_PREFIX" > source.sh
        - echo 'SUDO_CMD=""' >> source.sh
        - echo 'CONFIGURE_EXTRAS="-platform win32-g++ -static-runtime -no-zstd"' >> source.sh
        - echo "QT5_VERSION=$QT5_VERSION" >> source.sh
        - cat source.sh
script:
  # if setup has not already been done, run it
  - if [ ! -f qt/SETUP_COMPLETE ]; then $BUILD_SHELL setup.sh ; fi
  # osx doesn't have timeout function, using this instead: https://gist.github.com/jaytaylor/6527607
  - function timeout() { perl -e 'alarm shift; exec @ARGV' "$@"; }
  # run the build for at most 25mins=1500s (50min limit on travis job)
  - $BUILD_SHELL -c "timeout 1500 bash continue.sh"
  # if the build didn't finish in time
  #  - the above line exits with an error code
  #  - the directory `qt` in cache is updated with the current contents
  #  - travis job can be manually restarted: will continue build using the cached files
  # confirm qmake runs and check version number
  - $INSTALL_PREFIX/bin/qmake -v
before_deploy:
  # make tarball of installation
  tar -zcvf sme_deps_qt5_$TRAVIS_JOB_NAME.tgz $INSTALL_PREFIX/*
deploy:
  # if commit was tagged, upload resulting tarball to github release
  edge: true
  provider: releases
  token:
    secure: Gw4tK2zPML5+2OM9uNY80rD4dh5a/oC4UbCQAAZoTGjcBvNnrsFUrMi5gUUIE8v8ftlwFUiMfd4+pCL9mBcHMzCmLmvnZ27OlLPDoAfA4/VG1anvz/LLjeSs48INBL6YdqtE+VerjowFEYpx+64YQS/3PlHznSate4H8HX3rNiuSAohiO0QWSuvg5liAHqIljffWFx6kPZ1K31iQsjPVIH/DyehzV32lHVY81exNj6gIOy7VbW5l/6WJendoBepzAAWo2yPjUQ1tfMSh5lTFsPabBDWrKBEZA3Qd3S3D1Flvize8nUcKvLuDXvEwRIaATks222Ep3k3c+GfQYRvzWSI7+pSvwkPntPghOUP9baiedKJDoUiVTIH16bGr5tAPImg+xyvGUCm+wqUk8WXUWX0WYTw+OLM4iyQWtRlrsS6ZLyO5cAu3K4J7S45pSdVnaQsj+R3HiHZLaT4vUiPk+zhHWWBKkxLwn7iXaANriFw7+7bMLjWaAHm8sCru4OFY5BWEhF9iD6Shvvn/rdiP5fzOnJvkWVJ8ql01SATvMWIEvHFA0As/jHnLxNAbB4MPmppT/mTAtA6S/q/3lI4RcIsBLhAC/cRPc3F0hqzopGMsUGwkfQZdDRbhE1cBMszbnIRNmpql1jmHfovG7p2Yub5dpVxSPkBRJUGKpphzw3s=
  file:
    - sme_deps_qt5_$TRAVIS_JOB_NAME.tgz
  cleanup: false
  on:
    repo: spatial-model-editor/sme_deps_qt5
    tags: true
    all_branches: true
notifications:
  email: false
